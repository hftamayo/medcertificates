[{"/home/htamayo/sourcecode/medcertificates/src/index.js":"1","/home/htamayo/sourcecode/medcertificates/src/App.js":"2","/home/htamayo/sourcecode/medcertificates/src/reportWebVitals.js":"3","/home/htamayo/sourcecode/medcertificates/src/Contenedores/Ejemplojsx/Libreria.js":"4","/home/htamayo/sourcecode/medcertificates/src/Contenedores/Routing/Menu.js":"5","/home/htamayo/sourcecode/medcertificates/src/Contenedores/Routing/index.js":"6","/home/htamayo/sourcecode/medcertificates/src/Contenedores/Ejemplojsx/index.js":"7","/home/htamayo/sourcecode/medcertificates/src/Contenedores/APIFetching/index.js":"8","/home/htamayo/sourcecode/medcertificates/src/Contenedores/Optusuarios/index.js":"9","/home/htamayo/sourcecode/medcertificates/src/Contenedores/APIFetchingFull/index.js":"10","/home/htamayo/sourcecode/medcertificates/src/Contenedores/APIFetching/Contenedor.js":"11","/home/htamayo/sourcecode/medcertificates/src/Contenedores/Optusuarios/Context.js":"12","/home/htamayo/sourcecode/medcertificates/src/Contenedores/Optusuarios/Buscar.js":"13","/home/htamayo/sourcecode/medcertificates/src/Contenedores/Optusuarios/Lista.js":"14","/home/htamayo/sourcecode/medcertificates/src/Contenedores/APIFetchingFull/Contenedor.js":"15","/home/htamayo/sourcecode/medcertificates/src/Contenedores/APIFetchingFull/Form/index.js":"16","/home/htamayo/sourcecode/medcertificates/src/Contenedores/APIFetching/Form/index.js":"17","/home/htamayo/sourcecode/medcertificates/src/Contenedores/APIFetching/List/index.js":"18","/home/htamayo/sourcecode/medcertificates/src/Contenedores/APIFetchingFull/List/index.js":"19","/home/htamayo/sourcecode/medcertificates/src/Contenedores/Optusuarios/Item.js":"20","/home/htamayo/sourcecode/medcertificates/src/Contenedores/APIFetchingFull/Form/FormLayout.js":"21","/home/htamayo/sourcecode/medcertificates/src/Contenedores/APIFetching/List/Fila.js":"22","/home/htamayo/sourcecode/medcertificates/src/Contenedores/APIFetching/Form/FormLayout.js":"23","/home/htamayo/sourcecode/medcertificates/src/Contenedores/APIFetchingFull/List/Fila.js":"24","/home/htamayo/sourcecode/medcertificates/src/Contenedores/Contentful/index.js":"25","/home/htamayo/sourcecode/medcertificates/src/Contenedores/Contentful/Contenedor.js":"26","/home/htamayo/sourcecode/medcertificates/src/Contenedores/Contentful/sdk.js":"27","/home/htamayo/sourcecode/medcertificates/src/Contenedores/ReactQueryExample/index.js":"28","/home/htamayo/sourcecode/medcertificates/src/Contenedores/ReactQueryExample/List/index.js":"29","/home/htamayo/sourcecode/medcertificates/src/Contenedores/ReactQueryExample/Form/index.js":"30","/home/htamayo/sourcecode/medcertificates/src/Contenedores/APIFetching/List/ListGrommet.js":"31","/home/htamayo/sourcecode/medcertificates/src/utils.js":"32","/home/htamayo/sourcecode/medcertificates/src/Contenedores/APIFetching/Form/FormGrommet.js":"33"},{"size":500,"mtime":1609889231010,"results":"34","hashOfConfig":"35"},{"size":953,"mtime":1609892189137,"results":"36","hashOfConfig":"35"},{"size":362,"mtime":1609889231034,"results":"37","hashOfConfig":"35"},{"size":534,"mtime":1609451167000,"results":"38","hashOfConfig":"35"},{"size":850,"mtime":1609931065475,"results":"39","hashOfConfig":"35"},{"size":1524,"mtime":1609935075457,"results":"40","hashOfConfig":"35"},{"size":777,"mtime":1609449362000,"results":"41","hashOfConfig":"35"},{"size":368,"mtime":1609618478000,"results":"42","hashOfConfig":"35"},{"size":404,"mtime":1609529349000,"results":"43","hashOfConfig":"35"},{"size":376,"mtime":1609633173000,"results":"44","hashOfConfig":"35"},{"size":367,"mtime":1609619544000,"results":"45","hashOfConfig":"35"},{"size":389,"mtime":1609527633000,"results":"46","hashOfConfig":"35"},{"size":352,"mtime":1609529467000,"results":"47","hashOfConfig":"35"},{"size":1302,"mtime":1609549584000,"results":"48","hashOfConfig":"35"},{"size":469,"mtime":1609635691000,"results":"49","hashOfConfig":"35"},{"size":2660,"mtime":1609679698000,"results":"50","hashOfConfig":"35"},{"size":1401,"mtime":1609620299000,"results":"51","hashOfConfig":"35"},{"size":1779,"mtime":1609618835000,"results":"52","hashOfConfig":"35"},{"size":2224,"mtime":1609684800000,"results":"53","hashOfConfig":"35"},{"size":358,"mtime":1609524355000,"results":"54","hashOfConfig":"35"},{"size":1880,"mtime":1609677900000,"results":"55","hashOfConfig":"35"},{"size":505,"mtime":1609551081000,"results":"56","hashOfConfig":"35"},{"size":1721,"mtime":1609617787000,"results":"57","hashOfConfig":"35"},{"size":1691,"mtime":1609680864000,"results":"58","hashOfConfig":"35"},{"size":382,"mtime":1609936210340,"results":"59","hashOfConfig":"35"},{"size":469,"mtime":1609930909686,"results":"60","hashOfConfig":"35"},{"size":664,"mtime":1609933854921,"results":"61","hashOfConfig":"35"},{"size":290,"mtime":1608921531000,"results":"62","hashOfConfig":"35"},{"size":1374,"mtime":1608921531000,"results":"63","hashOfConfig":"35"},{"size":1706,"mtime":1608921531000,"results":"64","hashOfConfig":"35"},{"size":1788,"mtime":1608921531000,"results":"65","hashOfConfig":"35"},{"size":3899,"mtime":1608921531000,"results":"66","hashOfConfig":"35"},{"size":1778,"mtime":1608921531000,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1rgvx8v",{"filePath":"71","messages":"72","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"70"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"/home/htamayo/sourcecode/medcertificates/src/index.js",[],["146","147"],"/home/htamayo/sourcecode/medcertificates/src/App.js",["148","149","150","151","152","153"],"import logo from './logo.svg';\nimport './App.css';\nimport Saludos, { Envoltura, Saludo1, Saludo2 } from './Contenedores/Ejemplojsx';\nimport Libreria from './Contenedores/Ejemplojsx/Libreria';\nimport Menu from './Contenedores/Routing/Menu';\nimport Routing from './Contenedores/Routing';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      </header>\n\n      <main>\n        <div>\n          <p>Pagina default de React.js</p>\n        </div>\n        <Routing />\n        {/*<Saludos />*/}\n        {/*<Saludo1 color=\"green\" bgColor=\"yellow\" text=\"saludo1 modificado\"/>*/\n}        {/*<Saludo2 />*/}\n\n        {/*<Envoltura styles={{backgroundColor: 'lightblue'}}>*/}\n          {/*<Saludo1 />*/}\n          {/*<Saludo2 />*/}\n        {/*</Envoltura>*/}\n\n        {/*<Libreria />*/}\n        {/*<Libreria />*/}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","/home/htamayo/sourcecode/medcertificates/src/reportWebVitals.js",[],"/home/htamayo/sourcecode/medcertificates/src/Contenedores/Ejemplojsx/Libreria.js",[],"/home/htamayo/sourcecode/medcertificates/src/Contenedores/Routing/Menu.js",[],"/home/htamayo/sourcecode/medcertificates/src/Contenedores/Routing/index.js",["154"],"import React from 'react';\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport APIFetching from '../APIFetching';\nimport APIFetchingFull from '../APIFetchingFull';\nimport ReactQueryExample from '../ReactQueryExample';\nimport Contentful from '../Contentful';\nimport Saludo3, { Saludo1 } from '../Ejemplojsx';\nimport Busquedausuarios from '../Optusuarios';\nimport Menu from './Menu';\n\nfunction Routing() {\n    return (\n        <div>\n            <HashRouter>\n                <Menu />\n                <Switch>\n                    <Route exact path=\"/\">\n                        <Saludo1 text=\"saludos desde menu y routing\"/>\n                    </Route>\n                    <Route path=\"/jsx\">\n                        <Saludo3 />\n                    </Route>\n                    <Route path=\"/buscarusus\">\n                        <Busquedausuarios />\n                    </Route>   \n                    <Route path=\"/api\">\n                        <APIFetching />\n                    </Route>                 \n                    <Route path=\"/apiffull\">\n                        <APIFetchingFull />\n                    </Route>           \n                    <Route path=\"/rquery\">\n                        <Contentful />\n                    </Route>                                     \n                    <Route path=\"/cf\">\n                        <Contentful />\n                    </Route>                 \n\n                </Switch>\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default Routing;\n","/home/htamayo/sourcecode/medcertificates/src/Contenedores/Ejemplojsx/index.js",[],"/home/htamayo/sourcecode/medcertificates/src/Contenedores/APIFetching/index.js",[],"/home/htamayo/sourcecode/medcertificates/src/Contenedores/Optusuarios/index.js",["155"],"import React, { useState } from 'react'\nimport Buscar from './Buscar';\nimport SearchProvider from './Context';\nimport Lista from './Lista'\n\n\nfunction Busquedausuarios() {\n    return (\n        <div>\n            <p>Lista de usuarios</p>\n            <SearchProvider>\n                <Buscar />\n                <Lista />\n            </SearchProvider>\n        </div>\n    );\n}\n\nexport default Busquedausuarios\n","/home/htamayo/sourcecode/medcertificates/src/Contenedores/APIFetchingFull/index.js",[],"/home/htamayo/sourcecode/medcertificates/src/Contenedores/APIFetching/Contenedor.js",[],"/home/htamayo/sourcecode/medcertificates/src/Contenedores/Optusuarios/Context.js",[],"/home/htamayo/sourcecode/medcertificates/src/Contenedores/Optusuarios/Buscar.js",["156","157"],"import React, {useContext, useState} from 'react'\nimport { SearchContext } from './Context';\n\nfunction Buscar() {\n    const [busqueda, setBusqueda] = useContext(SearchContext);\n    return (\n        <div>\n            <input type=\"text\" onChange={(event) => \n            setBusqueda(event.target.value)} />\n        </div>\n    );\n}\n\nexport default Buscar\n","/home/htamayo/sourcecode/medcertificates/src/Contenedores/Optusuarios/Lista.js",["158","159"],"import React, { useContext, useEffect, useState } from 'react';\nimport { SearchContext } from './Context';\nimport Item from './Item';\n\nconst LISTAUSUARIOS = [\n    {codigo: 1, nombres: \"Lionel\"},\n    {codigo: 2, nombres: \"Mark\"},\n    {codigo: 3, nombres: \"Jordi\"},    \n    {codigo: 4, nombres: \"Ronald\"},    \n    {codigo: 5, nombres: \"Ousmane\"},    \n    {codigo: 6, nombres: \"Martin\"},    \n    {codigo: 7, nombres: \"Sergi\"},    \n];\n\nfunction Lista({}) {\n    const [busqueda, setBusqueda] = useContext(SearchContext);\n    const [usuarios, setUsuarios] = useState(LISTAUSUARIOS);\n\n    useEffect(() => {\n        const lstUsuariosFiltrados = LISTAUSUARIOS.filter(usuario => {\n            return usuario.nombres.toLowerCase()\n            .includes(busqueda.toLowerCase());\n        });\n\n        setUsuarios(lstUsuariosFiltrados);\n        console.log('lista de usuarios filtrados', lstUsuariosFiltrados);\n\n\n        return() => {\n            console.log('se va a desmontar');\n        }\n\n    }, [busqueda])\n\n\n    return (\n        <div  className=\"Lista-usuarios\">\n            {\n                usuarios.map((listusuarios) => {\n                    return <Item listusuarios={listusuarios} \n                    key={listusuarios.codigo.toString()} />;\n            })}\n        </div>\n    );\n}\n\nexport default Lista\n","/home/htamayo/sourcecode/medcertificates/src/Contenedores/APIFetchingFull/Contenedor.js",[],"/home/htamayo/sourcecode/medcertificates/src/Contenedores/APIFetchingFull/Form/index.js",["160"],"import axios from 'axios';\nimport React, { useContext } from 'react';\nimport { UsersContext } from '../Contenedor';\nimport FormLayout from './FormLayout';\n\nconst tokenPersistencia = \n'cf8e9a6efb3418150327848372fd4a16ee1798b68f142e4a694d8465462dce84';\n\nfunction Form() {\n    const {\n        usuarios: [, setUsuarios],\n        current: [current],\n    } = useContext(UsersContext);\n\n    const isAddMode = !current.id;\n\n    /* funcion para agregar registro */\n\n     const postDatosFrmUsuarios = async (mascaraEstatus) => {\n        const response = \n        await axios.post('https://gorest.co.in/public-api/users', \n        mascaraEstatus, \n        {\n            headers: {\n                Accept: 'application/json',\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${tokenPersistencia}`,\n            },\n        });\n        console.log('resultado POST ', response.data.data);\n        setUsuarios((currentList) => {\n            return [...currentList, response.data.data]\n        });\n    };\n\n    /* funcion para actualizar registro */\n    const putDatosFrmUsuarios = async (payload) => {\n        const response = await axios.put(\n          `https://gorest.co.in/public-api/users/${current.id}`,\n          payload,\n          {\n            headers: {\n              Accept: 'application/json',\n              'Content-type': 'application/json',\n              Authorization: `Bearer ${tokenPersistencia}`,\n            },\n          }\n        );\n        console.log('resultado PUT', response.data.data);\n        setUsuarios(function (currentList) {\n          return currentList.map((usuarios) => {\n            if ( usuarios.id === response.data.data.id) {\n              return {\n                ...usuarios,\n                ...response.data.data,\n              };\n            }\n            return usuarios;\n          });\n        });\n      };\n\n    /*almacena los valores que se digitaron en el formulario*/\n    const onSubmit = (valoresfrm) => {\n        {/*uso de spread property */}\n        const mascaraEstatus = {\n            ...valoresfrm,\n            status: valoresfrm.status ? 'Active': 'Inactive'\n        };\n        console.log({ valoresfrm, mascaraEstatus, isAddMode });\n\n        if (isAddMode){\n            postDatosFrmUsuarios(mascaraEstatus);\n        } else {\n            putDatosFrmUsuarios(mascaraEstatus);\n        }\n    };\n\n    return (\n        <div className=\"frmbox\">\n            {/*constante onSubmit sera enviado a FormLayout*/}\n            <FormLayout \n            onSubmit={onSubmit} \n            key={current.id}\n            currentValues={current}\n            />\n        </div>\n    );\n}\n\nexport default Form","/home/htamayo/sourcecode/medcertificates/src/Contenedores/APIFetching/Form/index.js",["161","162"],"import axios from 'axios';\nimport React, { useContext } from 'react';\nimport { UsersContext } from '../Contenedor';\nimport FormLayout from './FormLayout';\n\nconst tokenPersistencia = \n'cf8e9a6efb3418150327848372fd4a16ee1798b68f142e4a694d8465462dce84';\n\nfunction Form() {\n    const [usuarios, setUsuarios] = useContext(UsersContext);\n\n    const postDatosFrmUsuarios = async (mascaraEstatus) => {\n        const response = \n        await axios.post('https://gorest.co.in/public-api/users', \n        mascaraEstatus, \n        {\n            headers: {\n                Accept: 'application/json',\n                Authorization: `Bearer ${tokenPersistencia}`,\n            },\n        });\n        console.log({ response });\n        setUsuarios((currentList) => {\n            return [...currentList, response.data.data]\n        })\n    };\n\n    /*almacena los valores que se digitaron en el formulario*/\n    const onSubmit = (valoresfrm) => {\n        {/*uso de spread property */}\n        const mascaraEstatus = {\n            ...valoresfrm,\n            status: valoresfrm.status ? 'Active': 'Inactive'\n        };\n        console.log({ mascaraEstatus });\n\n        postDatosFrmUsuarios(mascaraEstatus);\n      \n    };\n\n    return (\n        <div className=\"frmbox\">\n            {/*constante onSubmit sera enviado a FormLayout*/}\n            <FormLayout onSubmit={onSubmit}/>\n        </div>\n    );\n}\n\nexport default Form","/home/htamayo/sourcecode/medcertificates/src/Contenedores/APIFetching/List/index.js",["163"],"import axios from 'axios';\nimport React, { useCallback, useContext, useEffect, useState } from 'react';\nimport { UsersContext } from '../Contenedor';\nimport Fila from './Fila';\n\nfunction List() {\n    {/*deprecado por uso del context para refrescar toda la vista\n    const [usuarios, setUsuarios] = useState([]);\n    UsersContext lo obtengo de Contenedor.js\n    */}\n    const [usuarios, setUsuarios] = useContext(UsersContext);\n    const [pagina, setPagina] = useState(68);\n\n    const fetchUsuarios = useCallback(\n        async () => {\n            const { data } = \n            await \n            axios.get(`https://gorest.co.in/public-api/users?page=${pagina}`\n            );\n            console.log({ data });\n            setUsuarios(data.data);\n        },\n        [pagina, setUsuarios]\n    );\n\n    useEffect(() => {\n        fetchUsuarios();\n    }, [fetchUsuarios]);\n\n    return (\n        <div className=\"frmbox\">\n            <input type=\"number\" value={pagina} onChange={(event) => \n                setPagina(event.target.value)} />\n            <table>\n                <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>Nombre</th>\n                        <th>Correo</th>\n                        <th>Genero</th>\n                        <th>Status</th>                                                                                                \n                    </tr>\n                </thead>\n                <tbody>\n                    {usuarios.map((usuario) => {\n                        return <Fila usuario={usuario} \n                        key={usuario.id.toString()} />\n                    })}\n                    \n                </tbody>\n            </table>\n            \n        </div>\n    )\n}\n\nexport default List\n","/home/htamayo/sourcecode/medcertificates/src/Contenedores/APIFetchingFull/List/index.js",["164"],"import axios from 'axios';\nimport React, { useCallback, useContext, useEffect, useState } from 'react';\nimport { UsersContext } from '../Contenedor';\nimport Fila from './Fila';\nimport styled from 'styled-components';\n\nconst ButtonAdd = styled.button\n    `color: white;\n    background-color: blue;\n\n    &:hover{\n        color: yellow;\n        background-color: black; \n    }\n`;\n\nfunction List() {\n    {/*deprecado por uso del context para refrescar toda la vista\n    const [usuarios, setUsuarios] = useState([]);\n    UsersContext lo obtengo de Contenedor.js\n    */}\n    const {\n        usuarios: [usuarios, setUsuarios],\n        current: [, setCurrent],\n    } = useContext(UsersContext);\n    const [pagina, setPagina] = useState(65);\n\n    const fetchUsuarios = useCallback(\n        async () => {\n            const { data } = \n            await \n            axios.get(`https://gorest.co.in/public-api/users?page=${pagina}`\n            );\n            console.log({ data });\n            setUsuarios(data.data);\n        }, [pagina, setUsuarios]);\n\n    useEffect(() => {\n        fetchUsuarios();\n    }, [fetchUsuarios]);\n\n    return (\n        <div className=\"frmbox\">\n            <input type=\"number\" className=\"paginacionctl\" value={pagina} onChange={(event) => \n                setPagina(event.target.value)} />\n                <ButtonAdd type=\"button\" onClick={() => setCurrent({})}>\n                    +Agregar\n                </ButtonAdd>\n            <table>\n                <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>Nombre</th>\n                        <th>Correo</th>\n                        <th>Genero</th>\n                        <th>Status</th>   \n                        <th>Actions</th>                                                                                             \n                    </tr>\n                </thead>\n                <tbody>\n                    {usuarios.map((usuario) => {\n                        return <Fila usuario={usuario} \n                        key={usuario.id.toString()} />\n                    })}\n                    \n                </tbody>\n            </table>\n            \n        </div>\n    )\n}\n\nexport default List\n","/home/htamayo/sourcecode/medcertificates/src/Contenedores/Optusuarios/Item.js",[],"/home/htamayo/sourcecode/medcertificates/src/Contenedores/APIFetchingFull/Form/FormLayout.js",[],"/home/htamayo/sourcecode/medcertificates/src/Contenedores/APIFetching/List/Fila.js",[],"/home/htamayo/sourcecode/medcertificates/src/Contenedores/APIFetching/Form/FormLayout.js",[],"/home/htamayo/sourcecode/medcertificates/src/Contenedores/APIFetchingFull/List/Fila.js",[],["165","166"],"/home/htamayo/sourcecode/medcertificates/src/Contenedores/Contentful/index.js",[],"/home/htamayo/sourcecode/medcertificates/src/Contenedores/Contentful/Contenedor.js",[],"/home/htamayo/sourcecode/medcertificates/src/Contenedores/Contentful/sdk.js",[],"/home/htamayo/sourcecode/medcertificates/src/Contenedores/ReactQueryExample/index.js",[],"/home/htamayo/sourcecode/medcertificates/src/Contenedores/ReactQueryExample/List/index.js",["167"],"import Axios from 'axios';\nimport { Box, Text } from 'grommet';\nimport { Refresh, StatusCritical } from 'grommet-icons';\nimport React from 'react';\nimport { useQuery } from 'react-query';\nimport ListGrommet from '../../APIFetching/List/ListGrommet';\n\nfunction List() {\n  const { data, isFetching, error, isLoading, status } = useQuery(\n    'fetchUsers',\n    function () {\n      return Axios.get('https://gorest.co.in/public-api/users?page=63')\n        .then((result) => {\n          return result.data.data;\n        })\n        .catch((err) => {\n          console.error(err);\n          return [];\n        });\n    }\n  );\n\n  if (isLoading) {\n    return (\n      <Box direction=\"row\" gap=\"medium\">\n        <Text color=\"accent-1\">\n          Loading... <Refresh color=\"accent-1\" />\n        </Text>\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Box direction=\"row\" gap=\"medium\">\n        <Text color=\"accent-2\">\n          An error has occurred... <StatusCritical color=\"accent-2\" />\n        </Text>\n      </Box>\n    );\n  }\n\n  return (\n    <Box pad=\"medium\" elevation=\"medium\" fill gap=\"small\">\n      {isFetching && (\n        <Box direction=\"row\" gap=\"medium\">\n          <Text color=\"accent-2\">\n            Fetching data... <Refresh color=\"accent-2\" />\n          </Text>\n        </Box>\n      )}\n\n      <ListGrommet users={data} />\n    </Box>\n  );\n}\n\nexport default List;\n","/home/htamayo/sourcecode/medcertificates/src/Contenedores/ReactQueryExample/Form/index.js",[],"/home/htamayo/sourcecode/medcertificates/src/Contenedores/APIFetching/List/ListGrommet.js",[],"/home/htamayo/sourcecode/medcertificates/src/utils.js",[],"/home/htamayo/sourcecode/medcertificates/src/Contenedores/APIFetching/Form/FormGrommet.js",[],{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","severity":1,"message":"173","line":3,"column":8,"nodeType":"174","messageId":"175","endLine":3,"endColumn":15},{"ruleId":"172","severity":1,"message":"176","line":3,"column":19,"nodeType":"174","messageId":"175","endLine":3,"endColumn":28},{"ruleId":"172","severity":1,"message":"177","line":3,"column":30,"nodeType":"174","messageId":"175","endLine":3,"endColumn":37},{"ruleId":"172","severity":1,"message":"178","line":3,"column":39,"nodeType":"174","messageId":"175","endLine":3,"endColumn":46},{"ruleId":"172","severity":1,"message":"179","line":4,"column":8,"nodeType":"174","messageId":"175","endLine":4,"endColumn":16},{"ruleId":"172","severity":1,"message":"180","line":5,"column":8,"nodeType":"174","messageId":"175","endLine":5,"endColumn":12},{"ruleId":"172","severity":1,"message":"181","line":5,"column":8,"nodeType":"174","messageId":"175","endLine":5,"endColumn":25},{"ruleId":"172","severity":1,"message":"182","line":1,"column":17,"nodeType":"174","messageId":"175","endLine":1,"endColumn":25},{"ruleId":"172","severity":1,"message":"182","line":1,"column":28,"nodeType":"174","messageId":"175","endLine":1,"endColumn":36},{"ruleId":"172","severity":1,"message":"183","line":5,"column":12,"nodeType":"174","messageId":"175","endLine":5,"endColumn":20},{"ruleId":"184","severity":1,"message":"185","line":15,"column":16,"nodeType":"186","messageId":"187","endLine":15,"endColumn":18},{"ruleId":"172","severity":1,"message":"188","line":16,"column":22,"nodeType":"174","messageId":"175","endLine":16,"endColumn":33},{"ruleId":"189","severity":1,"message":"190","line":65,"column":9,"nodeType":"191","messageId":"192","endLine":65,"endColumn":38},{"ruleId":"172","severity":1,"message":"193","line":10,"column":12,"nodeType":"174","messageId":"175","endLine":10,"endColumn":20},{"ruleId":"189","severity":1,"message":"190","line":30,"column":9,"nodeType":"191","messageId":"192","endLine":30,"endColumn":38},{"ruleId":"189","severity":1,"message":"190","line":7,"column":5,"nodeType":"191","messageId":"192","endLine":10,"endColumn":8},{"ruleId":"189","severity":1,"message":"190","line":18,"column":5,"nodeType":"191","messageId":"192","endLine":21,"endColumn":8},{"ruleId":"168","replacedBy":"194"},{"ruleId":"170","replacedBy":"195"},{"ruleId":"172","severity":1,"message":"196","line":9,"column":47,"nodeType":"174","messageId":"175","endLine":9,"endColumn":53},"no-native-reassign",["197"],"no-negated-in-lhs",["198"],"no-unused-vars","'Saludos' is defined but never used.","Identifier","unusedVar","'Envoltura' is defined but never used.","'Saludo1' is defined but never used.","'Saludo2' is defined but never used.","'Libreria' is defined but never used.","'Menu' is defined but never used.","'ReactQueryExample' is defined but never used.","'useState' is defined but never used.","'busqueda' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'setBusqueda' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'usuarios' is assigned a value but never used.",["197"],["198"],"'status' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]